<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.weiyu.dao.UserDao">

    <resultMap type="UserIdRole" id="UserRoleResult">
        <result column="id" property="id"/>
        <result column="role_id" property="role_id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="name" property="name"/>
    </resultMap>

    <!-- 查询所有用户信息-->
    <select id="selectUser" resultType="User">
        SELECT
        id,
        username,
        email
        FROM
        sys_user
    </select>

    <!--通过用户名查找用户-->
    <select id="selectByUserName" parameterType="String" resultType="User">
        SELECT
        id,
        username,
        email,
        password
        FROM
        sys_user
        WHERE
        username = #{username}
    </select>

    <!--新增用户-->
    <insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sys_user(username, email, password)
        VALUES(
            #{username},
            #{email},
            #{password}
        )
    </insert>

    <!--新增用户角色关联-->
    <insert id="addUserRole" parameterType="UserRole">
        INSERT INTO sys_user_role(user_id, role_id)
        VALUES(#{userId}, #{roleId})
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        UPDATE
        sys_user
        SET
        username = #{username},
        email = #{email},
        password = #{password}
        WHERE id = #{id}
    </update>

    <!--更新用户角色关联-->
    <update id="updateUserRole" parameterType="UserRole">
        UPDATE
        sys_user_role
        SET
        user_id = #{userId},
        role_id = #{roleId}
        WHERE id = #{id}
    </update>

    <!--根据用户名查找角色-->
    <select id="findByUserRolesId" resultType="UserRole">
        SELECT
        ur.id AS urId,
        u.id AS userId,
        r.id AS roleId
        FROM
        sys_user AS u,
        sys_role AS r,
        sys_user_role AS ur
        WHERE
        u.id= #{userId} AND u.id = ur.user_id AND r.id = ur.role_id
    </select>


    <!--根据用户名查找ID-->
    <select id="findById" resultType="UserIdRole">
        SELECT
        id,
        username,
        email,
        password
        FROM
        sys_user
        WHERE
        id = #{id}
    </select>

    <!--根据用户名查找角色-->
    <select id="findByRoles" parameterType="string" resultType="string">
        SELECT r.name
        FROM
            sys_user AS u,
            sys_role AS r,
            sys_user_role AS ur
        WHERE
            u.username = #{username} AND u.id = ur.user_id AND r.id = ur.role_id
    </select>

    <!--查询用户角色信息-->
    <select id="findByUserRole" resultMap="UserRoleResult">
        SELECT
        u.id,
        ur.id AS urId,
        ur.role_id AS role_id,
        u.username,
        u.password,
        u.email,
        r.name
        FROM
            sys_user AS u
            LEFT JOIN
            sys_user_role AS ur
            ON
            u.id = ur.user_id
            LEFT JOIN
            sys_role AS r
            ON
            r.id = ur.role_id
        WHERE
            u.id = #{id}
    </select>


    <!--根据用户名查找权限-->
    <select id="findPermissions" parameterType="string" resultType="string">
        SELECT p.code
        FROM
            sys_user AS u,
            sys_role AS r,
            sys_user_role AS ur,
            sys_permission AS p,
            sys_role_permission AS rp
        WHERE
            u.username = #{username} AND u.id = ur.user_id AND ur.role_id = r.id AND r.id = rp.role_id AND rp.permission_id = p.id
    </select>


    <!--删除用户-->
    <delete id="deleteUser" parameterType="long">
        DELETE FROM sys_user
        WHERE id = #{userId}
    </delete>

    <!--删除用户角色关联-->
    <delete id="deleteUserRole" parameterType="long">
        DELETE FROM sys_user_role
        WHERE user_id = #{userId}
    </delete>

</mapper>